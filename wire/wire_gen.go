// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
	"github.com/rakhiazfa/vust-identity-service/api/handlers"
	"github.com/rakhiazfa/vust-identity-service/api/routes"
	"github.com/rakhiazfa/vust-identity-service/internal/database"
	"github.com/rakhiazfa/vust-identity-service/internal/repositories"
	"github.com/rakhiazfa/vust-identity-service/internal/services"
	"github.com/rakhiazfa/vust-identity-service/pkg/utils"
)

// Injectors from wire.go:

func SetupProviders() *gin.Engine {
	db := database.NewPostgresConnection()
	userContext := utils.NewUserContext(db)
	userSessionRepository := repositories.NewUserSessionRepository(db)
	permissionRepository := repositories.NewPermissionRepository(db)
	permissionService := services.NewPermissionService(permissionRepository)
	permissionHandler := handlers.NewPermissionHandler(permissionService)
	validator := utils.NewValidator()
	roleRepository := repositories.NewRoleRepository(db)
	roleService := services.NewRoleService(db, roleRepository)
	roleHandler := handlers.NewRoleHandler(validator, roleService)
	userRepository := repositories.NewUserRepository(db)
	userService := services.NewUserService(db, userRepository)
	userHandler := handlers.NewUserHandler(validator, userService)
	fileService := services.NewFileService(userContext)
	accountService := services.NewAccountService(db, userContext, fileService, userRepository)
	accountHandler := handlers.NewAccountHandler(userContext, accountService, validator)
	authService := services.NewAuthService(db, userRepository, userSessionRepository, roleRepository)
	authHandler := handlers.NewAuthHandler(validator, authService)
	engine := routes.SetupRoutes(userContext, userSessionRepository, permissionHandler, roleHandler, userHandler, accountHandler, authHandler)
	return engine
}

// wire.go:

var permissionModule = wire.NewSet(repositories.NewPermissionRepository, services.NewPermissionService, handlers.NewPermissionHandler)

var roleModule = wire.NewSet(repositories.NewRoleRepository, services.NewRoleService, handlers.NewRoleHandler)

var userModule = wire.NewSet(repositories.NewUserRepository, services.NewUserService, handlers.NewUserHandler)

var accountModule = wire.NewSet(services.NewAccountService, handlers.NewAccountHandler)

var authModule = wire.NewSet(repositories.NewUserSessionRepository, services.NewAuthService, handlers.NewAuthHandler)
